/// Slice a list
///
/// @author Hugo Giraudel
///
/// @link http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#miscellaneous
///
/// @example scss - Usage
///   $list: a, b, c, d, e, f;
///   $new-list: slice($list, 3, 5);
///   $new-list: slice($list, 4, 4);
///   $new-list: slice($list, 5, 3);
///   $new-list: slice($list, -1, 10);
///
/// @example scss - Output
///   $new-list: c, d, e
///   $new-list: d
///   $new-list: error
///   $new-list: error
///

@function slice($list, $start: 1, $end: length($list)) {
  $result: null;

  @if type-of($start) != number or type-of($end) != number {
    @if $warnings {
      @warn "Either $start or $end are not a number for `slice`.";
    }
  }

  @else if $start > $end {
    @if $warnings {
      @warn "The start index has to be lesser than or equals to the end index for `slice`.";
    }
  }

  @else if $start < 1 or $end < 1 {
    @if $warnings {
      @warn "List indexes must be non-zero integers for `slice`.";
    }
  }

  @else if $start > length($list) {
    @if $warnings {
      @warn "List index is #{$start} but list is only #{length($list)} item long for `slice`.";
    }
  }

  @else if $end > length($list) {
    @if $warnings {
      @warn "List index is #{$end} but list is only #{length($list)} item long for `slice`.";
    }
  }

  @else {
    $result: ();

    @for $i from $start through $end {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}
