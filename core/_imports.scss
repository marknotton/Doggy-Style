// D-Style 0.0.1-alpha
// http://goo.gl/RorsoL
// Copyright 2013-2016 Mark Notton
// MIT License

@import "settings/global";
@import "helpers/warnings";

// Private Helpers
@import "helpers/private/arglist-to-list",
        "helpers/private/find-digits",
        "helpers/private/list-items-to-strings",
        "helpers/private/find-integer",
        "helpers/private/from-hex",
        "helpers/private/brightness",
        "helpers/private/lightness",
        "helpers/private/from-hsl",
        "helpers/private/min-max-number",
        "helpers/private/from-rgb",
        "helpers/private/hash-fix",
        "helpers/private/get-color-value",
        "helpers/private/hex-to-dec",
        "helpers/private/sudo",
        "helpers/private/string-explode",
        "helpers/private/string-compare",
        "helpers/private/length",
        "helpers/private/pow",
        "helpers/strings";

// Checks
@import "helpers/checks/is-number",
        "helpers/checks/is-arglist",
        "helpers/checks/is-absolute-length",
        "helpers/checks/is-relative-length",
        "helpers/checks/is-angel",
        "helpers/checks/is-bool",
        "helpers/checks/is-calc",
        "helpers/checks/is-colour",
        "helpers/checks/is-duration",
        "helpers/checks/is-false",
        "helpers/checks/is-function",
        "helpers/checks/is-frequency",
        "helpers/checks/is-ease",
        "helpers/checks/is-integer",
        "helpers/checks/is-length",
        "helpers/checks/is-list",
        "helpers/checks/is-map",
        "helpers/checks/is-null",
        "helpers/checks/is-dark",
        "helpers/checks/is-light",
        "helpers/checks/is-first-character",
        "helpers/checks/is-percentage",
        "helpers/checks/is-position",
        "helpers/checks/is-pseudo",
        "helpers/checks/is-resolution",
        "helpers/checks/is-unit",
        "helpers/checks/is-selector",
        "helpers/checks/is-string",
        "helpers/checks/is-time",
        "helpers/checks/check";

// Casts
@import "functions/casts/to-bool",
        "functions/casts/to-color",
        "functions/casts/to-list",
        "functions/casts/to-map",
        "functions/casts/to-null",
        "functions/casts/to-number",
        "functions/casts/to-string";

// Lists
@import "functions/lists/contains",
        "functions/lists/first",
        "functions/lists/second",
        "functions/lists/insert-nth",
        "functions/lists/last",
        "functions/lists/merge",
        "functions/lists/prepend",
        "functions/lists/remove",
        "functions/lists/remove-nth",
        "functions/lists/replace",
        "functions/lists/replace-nth",
        "functions/lists/reverse",
        "functions/lists/shift",
        "functions/lists/slice",
        "functions/lists/sort";

// Maps
@import "functions/maps/map-deep-get",
        "functions/maps/map-deep-set",
        "functions/maps/map-depth",
        "functions/maps/map-set",
        "functions/maps/map-extend",
        "functions/maps/map-has-keys",
        "functions/maps/map-has-nested-keys",
        "functions/maps/map-zip";

@import "helpers/symbols/common";
//      "helpers/symbols/arrows",
//      "helpers/symbols/block",
//      "helpers/symbols/box",
//      "helpers/symbols/currency",
//      "helpers/symbols/dingbats",
//      "helpers/symbols/geometric",
//      "helpers/symbols/letterlike",
//      "helpers/symbols/misc",
//      "helpers/symbols/operators",
//      "helpers/symbols/punctuation";

// Numbers
@import "functions/numbers/add-unit",
        "functions/numbers/units",
        "functions/numbers/pad",
        "functions/numbers/spacer",
        "functions/numbers/strip";

// Flexbox
@import "mixins/flexbox/flex-container",
        "mixins/flexbox/flex-grid",
        "mixins/flexbox/flex-items",
        "mixins/flexbox/flex-remove";

// Text
@import "functions/text/smart-lineheight",
        "functions/text/string-explode",
        "functions/text/string-replace";

// Colours
@import "functions/colours/colour",
        "functions/colours/colour-contrast",
        "functions/colours/random-colour";

// SVG
@import "mixins/svg/svg",
        "mixins/svg/svg-size",
        "functions/svg/svg",
        "functions/svg/dots",
        "functions/svg/lines",
        "functions/svg/fake-radius";

// Functions
@import "functions/opposite-direction",
        "functions/mobile-first";

// Settings
@import "settings/colours",
        "settings/directories",
        "settings/grid",
        "settings/padding",
        "settings/spacing",
        "settings/text";

// Grid
@import "mixins/grid/grid";

// Columns
@import "mixins/columns/columns";

// Media Queries
@import "mixins/grid/break-between";

// Mixins
@import "mixins/align",
        "mixins/animation",
        "mixins/aspect-ratio",
        "mixins/background-image",
        "mixins/blend",
        "mixins/blendmodes",
        "mixins/border-radius",
        "mixins/backface-visibility",
        "mixins/bulletpoint",
        "mixins/browsers",
        "mixins/center",
        "mixins/clearfix",
        "mixins/columns",
        "mixins/custom-property",
        "mixins/devices",
        "mixins/dropdown",
        "mixins/filters",
        "mixins/font-face",
        "mixins/fontsize",
        "mixins/flip",
        "mixins/keyframes",
        "mixins/gallery",
        "mixins/gradient",
        "mixins/image",
        "mixins/image-size",
        "mixins/inputs",
        "mixins/last",
        "mixins/nth",
        "mixins/nth-last",
        "mixins/placeholder",
        "mixins/prefixer",
        "mixins/selection",
        "mixins/user-select",
        "mixins/shadow",
        "mixins/smart-horizontal",
        "mixins/sudo-image",
        "mixins/size",
        "mixins/text-shadow",
        "mixins/transforms",
        "mixins/transition",
        "mixins/triangle-classic",
        "mixins/triangle",
        "mixins/unwrap",
        "mixins/vertical";

// Animations
@import "animations/jump",
        "animations/wobble",
        "animations/shake";

// Placeholders
@import "placeholders/clear",
        "placeholders/cursor",
        "placeholders/rendering",
        "placeholders/misc",
        "placeholders/text";

// Helpers
@import "helpers/eases",
        "helpers/custom-elements",
        "helpers/reset",
        "helpers/show-breakpoints",
        "helpers/warnings";

@if mixin-exists(settings) and $reset {
  @include settings();
}
@if $show-breakpoints and $reset { @include show-breakpoints(); }
