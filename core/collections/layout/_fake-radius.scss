/// Create a set of border-radius svg sprites with advance settings
///
/// @author Mark Notton
///
/// @access public

@mixin fake-radius($settings...) {

  $count : 0;
  
  $corner-settings: (
    top-left : (
      color : null,
      width : null,
      height : null
    ),
    top-right : (
      color : null,
      width : null,
      height : null
    ),
    bottom-left : (
      color : null,
      width : null,
      height : null
    ),
    bottom-right : (
      color : null,
      width : null,
      height : null
    ),
  );

  $corners : to-list($corner-settings, keys);

  @debug $corners;

  @each $settings in _arglist-to-list($settings...) {
    $count : $count + 1; 

    @each $setting in $settings {

      // If the settings contains one of the corners types, only focus on that one corner for the remaining settings.
      @if is-string($setting) and contains($corners, $setting) {
        $corner : $setting;
        
        @each $setting in $settings {
          @if is-colour($setting) and map-deep-get($corner-settings, $corner, color) == null {
            $corner-settings : map-deep-set($corner-settings, $corner, color, colour($setting, true));
          }
          @elseif is-number($setting) {
            @if map-deep-get($corner-settings, $corner, width) == null {
              $corner-settings : map-deep-set($corner-settings, $corner, width, $setting);
            } @else {
              $corner-settings : map-deep-set($corner-settings, $corner, height, $setting);
            }
          }
        }

        // Default colour if not supplied
        @if map-deep-get($corner-settings, $corner, color) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, color, colour(red, true));
        }
        
        // If not units were found at all, revert the width back to a default radius setting
        @if map-deep-get($corner-settings, $corner, width) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, width, $border-radius);
        }

        // If a second unit was not supplied, the height would be set to null. As a fallback, set height to width
        @if map-deep-get($corner-settings, $corner, height) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, height, map-deep-get($corner-settings, $corner, width));
        }

      }
      @else {
        
      
      }
    }
  
  }
  @debug $corner-settings;

  $svg : "<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'>";
  $svg : $svg + "<rect id='top-left' x='0%' y='0%' width='20' height='20' fill='green'/>";
  $svg : $svg + "<rect id='top-right' x='-100%' y='0%' width='20' height='20' fill='green' transform='scale(-1,1)'/>";
  $svg : $svg + "<rect id='bottom-left' x='0%' y='-100%' width='20' height='20' fill='blue' transform='scale(1,-1)'/>";
  $svg : $svg + "<rect id='bottom-right' x='-100%' y='-100%' width='20' height='20' fill='yellow' transform='scale(-1,-1)'/>";
  $svg : $svg + "</svg>";

  $sudo : before;


  &#{_sudo($sudo)} { 
    @extend %sudo; 
    background-image:svg($svg); 
  }
}