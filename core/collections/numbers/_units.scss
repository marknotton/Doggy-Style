/// These functions can return two very different results.
/// Ommiting a number will simply add a unit in for form of interpolated syntax.
/// The other output is when a number has been passed, and any existing units
/// in the given paramenter will be replaced or added to the end of the number.
///
/// @example scss - Usage 1
///   height:$someNumber + px;
///
/// @example scss - Output 1
///   height:50px;
///
/// @example scss - Usage 2
///   height:rem(50px);
///
/// @example scss - Output 2
///   height:50rem;
///
/// @return {String}

@function cm($num:null) {
  @return if(is-null($num) or not is-number($num), #{cm}, add-unit($num, cm, true));
}

@function em($num:null) {
  @return if(is-null($num) or not is-number($num), #{em}, add-unit($num, em, true));
}

@function rem($num:null) {
  @return if(is-null($num) or not is-number($num), #{rem}, add-unit($num, rem, true));
}

@function ex($num:null) {
  @return if(is-null($num) or not is-number($num), #{ex}, add-unit($num, ex, true));
}

@function in($num:null) {
  @return if(is-null($num) or not is-number($num), #{in}, add-unit($num, in, true));
}

@function mm($num:null) {
  @return if(is-null($num) or not is-number($num), #{mm}, add-unit($num, mm, true));
}

@function pc($num:null) {
  @return if(is-null($num) or not is-number($num), #{pc}, add-unit($num, pc, true));
}

@function pt($num:null) {
  @return if(is-null($num) or not is-number($num), #{pt}, add-unit($num, pt, true));
}

@function px($num:null) {
  @return if(is-null($num) or not is-number($num), #{px}, add-unit($num, px, true));
}

@function vh($num:null) {
  @return if(is-null($num) or not is-number($num), #{vh}, add-unit($num, vh, true));
}

@function vw($num:null) {
  @return if(is-null($num) or not is-number($num), #{vw}, add-unit($num, vw, true));
}

@function vmin($num:null) {
  @return if(is-null($num) or not is-number($num), #{vmin}, add-unit($num, vmin, true));
}
