
@use '../modules/is/null' as is;
@use '../modules/unit/add' as unit;
@use '../modules/argument';
@use '../modules/map';
@use '../modules/meta';

@mixin responsive-fontsize($base, $args...) {

  $arguments : argument.defaults((
    min   : null,
    max   : null,
    line-height : 1.1,
    range : 4vw,
    unit  : 'px',
    scale : 0.2,
    custom-property : null,
    force : false,
  ), $args...);

  $base            : unit.add($base, map.get($arguments, unit));
  $min             : unit.add(map.get($arguments, min));
  $max             : unit.add(map.get($arguments, max));
  $range           : unit.add(map.get($arguments, range), 'vw');
  $scale           : map.get($arguments, scale) * 100;
  $line-height     : map.get($arguments, line-height);
  $custom-property : map.get($arguments, custom-property);
  $force           : map.get($arguments, force);

  @if meta.type-of($min) == 'null' {
    $min : $base - ($base / 100 * $scale);
    $min : if($min <= 0, $base - ($base / 100 * (map.deep-get($arguments, defaults, scale) * 100)), $min);
  }

  @if meta.type-of($max) == 'null' {
    $max : $base + ($base / 100 * $scale);
  }

  font-size: $base;
  font-size: min(max(#{$max}, #{$range}), #{$min});
  
  @if meta.type-of($line-height) == 'number' {
    line-height:$line-height;
  }
}