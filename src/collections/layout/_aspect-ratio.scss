/// Create a pseudo element which will retain a parent elements' aspect ratio responsively.
///
/// @author Mark Notton
///

///
/// @param {number | list} $ratio - Use a predefined variable, directly enter a percentage, or pass in one or two numbers to be calculated.
///
/// @param {string} $sudo - Set the type of pseudo to use. Defaults to "before".
///
/// @require {function} sudo
/// @require {function} _unit-fallback
/// @require {function} first
/// @require {function} second
/// @require {function} is-percentage
///
/// @example scss - Usage
/// .foo {
///   @include aspect-ratio($ratio-16-9);
/// }
///
/// .bar {
///   @include aspect-ratio(2 1, after);
/// }
///
/// @example css - CSS output
/// .foo:before {
///   content: "";
///   display: block;
///   padding-top: 56.25%;
/// }
///
/// .bar:after {
///   content: "";
///   display: block;
///   padding-top: 50%;
/// }

@mixin aspect-ratio($args...) {

	$defaults : (
		width  : 1,
		height : null,
		sudo : before
	);

	$settings : get-settings($defaults, $args...);

	$width     : map-get($settings, width);
	$height    : map-get($settings, height);
	$sudo      : map-get($settings, sudo);
	$important : map-get($settings, important);

  &#{pseudo($sudo)} {
    content:"";
    display:block; 
    padding-top: if(is-percentage($width), $width, percentage($height / $width)) $important;
  }
}
