// Get breakpoint from the breakpoint list, either by it's number or name
@function get-breakpoint($break) {
  @if is-string($break) and map-has-key($breakpoints, $break) {
    // If a string is passed and exists in the breakpoints map as a key, return the value
    @return map-get($breakpoints, $break);
  } @elseif is-number($break) {
    $number : strip-unit($break);
    // If a number is passed and it exists in the breakpoints map, return the key
    @if contains(map-values($breakpoints), $number) {
      $list : null;
      $nth : 1;
      @each $break in map-values($breakpoints) {
        $nth : $nth + 1;
        @if $break == $number {
          $list : add(nth(map-keys($breakpoints),$nth), $list);
        }
      }
      @if length($list) == 1 {
        @return nth($list, 1);
      } @else {
        @return $list;
      }
    } @else {
      // @include warning($number + ' is not a breakpoint');
      @return false;
    }
  }
}
