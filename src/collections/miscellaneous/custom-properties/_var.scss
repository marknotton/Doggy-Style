@mixin var($args...) {

  $defaults : (
    property : null,
    variable : primary,
    opacity  : 1,
  );

  $settings : get-settings($defaults, $args...);

  $property  : map-get($settings, property);
  $variable  : map-get($settings, variable);
  $opacity   : map-get($settings, opacity);
  $important : map-get($settings, important);

  $variable-value : $variable;
  $fallback-value : null;

  // Allow the third param (opacity) to accept booleans.
  // This will work in place of the $importnat param.
  @if is-bool($opacity) and $opacity == true {
    $important : $opacity;
    $opacity : 1;
  }

  $value : var-value($variable, $opacity);
  $variable-value : if(is-list($value), nth($value, 1), $value);
  $fallback-value : if(is-list($value), nth($value, 2), null);

  @if ( not is-null($fallback-value) ) {
    #{$property} : $fallback-value $important;
  }

  @supports(--css: variables) {
    #{$property} : $variable-value $important;
  }


}
