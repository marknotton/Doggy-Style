@mixin svg-children($args...) {

	$defaults : (
		svg      : null,
		targets  : $svg-elements,
		offset-y : 0,
		offset-x : 0,
	);

	$settings : get-settings($defaults, $args...);

	$svg        : map-get($settings, svg);
	$targets    : map-get($settings, targets);
	$offset-y   : map-get($settings, offset-y);
	$offset-x   : map-get($settings, offset-x);
	$important  : map-get($settings, important);

	@if (is-null($svg)) {
		@error("You must pass in the name of the SVG you wat to apply the transform origins to");
	}

	@if (map-has-key($symbols, $svg)) {

		$svg : map-get($symbols, $svg);

		@if (map-has-key($svg, children)) {

			$children : map-get($svg, children);

			@if length($children) {

				@for $i from 1 through length($children) {

					$child       : nth($children, $i);
					$target      : if(map-has-key($child, target), map-get($child, target), map-get($child, type));;
					$type        : map-get($child, type);
					$x           : map-get($child, x) + $offset-x;
					$y           : map-get($child, y) + $offset-y;

@debug $child;
@debug $target;
@debug $type;
@debug $x;
@debug $y;
					@if contains($targets, $type) {

						@if $target != '' {
							#{$target} {
								transform-origin:$x $y $important;
								@content;
							}
						}

					}

				}
			}
		} @else {
			@warn("It looks like you don't have any children data in your _symbols.scss map. Check this is enabled in your 'svg-to-symbols' Gulp task")
		}
	} @else {
		@warn($svg + ' was not found in your symbols map.');
	}

}
