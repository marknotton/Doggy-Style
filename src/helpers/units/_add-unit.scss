////////////////////////////////////////////////////////////////////////////////
/// Add Unit                                                           #add-unit
////////////////////////////////////////////////////////////////////////////////

/// Adds a default unit to a number if one is not used.
/// @author Mark Notton
/// @group helpers-numbers
/// @param {number} $value
/// @param {string} $unit - If a value is unitless add the default unit.
/// @param {bool} $force - If the value already has a unit, and a different unit was specifically
///   supplied, this boolean desides wether to forcibly replace the unit.
/// @require {variable} default-unit
/// @require {variable} $relative-lengths
/// @require {variable} $abolute-lengths
/// @require {function} is-unit
/// @require {function} is-number
/// @require {function} strip
///
/// @example scss - Usage
///   add-unit(50)
///   add-unit(50px)
///   add-unit(50, %)
///   add-unit(50px, %)
///
/// @output scss - Output
///   50px
///   50px
///   50%
///   50%

@function add-unit($value, $args...) {

  $defaults : (
    unit  : $default-unit,
    force : false
  );

	@if is-null($value) {
		@return null;
	}

  $settings : get-settings($defaults, $args...);

  $unit    : map-get($settings, unit);
  $force   : map-get($settings, force);

	// Manage var(...) values ----------------------------------------------------

  @if is-var($value) {

		$variables : get-var-value($value, false);

		@if is-number($variables) {
			$value : string-replace(
				$value,
				to-string($variables),
				to-string(add-unit($variables, $unit, $force))
			);
		}
  }
  @elseif is-number($value) {

		$value : to-number($value);

    @if unitless(to-number($value)) {
      $value : $value + ($unit or $default-unit);
    }
    @elseif is-unit($value) {
      @if $force and $unit != null {
        $value : remove-unit($value) + $unit;
      } @else {
        $value : $value;
      }
    }
  }

	@return to-number($value);
}

@function add-unit2($value, $args...) {

  $defaults : (
    unit  : $default-unit,
    force : false
  );

  $settings : get-settings($defaults, $args...);

  $unit    : map-get($settings, unit);
  $force   : map-get($settings, force);

	// Manage var(...) values ----------------------------------------------------

  @if is-var($value) {

		$variables : get-var-value($value);

		@if is-number($variables) {
			$value : string-replace($value,	to-string($variables),to-string(add-unit($variables, $unit, $force)));
		}
  }
  @elseif is-number($value) {

    @if unitless($value) {
      $value : $value + ($unit or $default-unit);
    }
    @elseif is-unit($value) {
      @if $force and $unit != null {
        $value : remove-unit($value) + $unit;
      } @else {
        $value : $value;
      }
    }
  }

	@return to-number($value);
}
