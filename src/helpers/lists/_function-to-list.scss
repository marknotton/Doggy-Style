////////////////////////////////////////////////////////////////////////////////
/// Function To List                                           #function-to-list
////////////////////////////////////////////////////////////////////////////////
///
/// Convert a function to a list format.
/// Designed so that Bourbon and other framework syntaxes can be combined with my own.
///
/// @author Mark Notton
///
/// @access public
///
/// @return {list}
///
/// @group helpers-lists
///

@function function-to-list($function, $separator:space) {

  $function-list : ();

  @if is-string($function) {

    $first-brace : str-index($function, '(');
    $last-brace : str-index($function, ')');

    @if $first-brace and $last-brace {
      // Gets everything before the first open bracket
      $function-name : str-slice($function, 1, $first-brace - 1);

      // Adds the function name to functions-list
      $function-list : append($function-list, $function-name, $separator);

      // Gets everything after the first open bracket, and before the last closed bracket
      $function-value : str-slice($function, $first-brace + 1, $last-brace - 1);

      // Explode the values into a list, delimated by a comma
      $values : _string-explode($function-value);

      // Add each value to the function list
      @each $value in $values {

        $value : if(is-number($value), to-number($value), $value);

        $function-list : append($function-list, $value, $separator);
      }

      // Return the function to list cast
      @return $function-list;

    } @else {

      // If the first argument passed isn't determined to be a function, the original function will be returned.
      @return $function;

    }
  } @else {

    // If the first argument passed isn't determined to be a function, the original function will be returned.
    // Try casting the function to a string first
    @return $function;

  }
}
