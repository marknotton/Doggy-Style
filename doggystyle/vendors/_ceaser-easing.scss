///* Ceaser Easgin */
///* https://github.com/jhardy/compass-ceaser-easing */

// Vars
$linear         : "0.250, 0.250, 0.750, 0.750" !default;
$ease           : "0.250, 0.100, 0.250, 1.000" !default;
$ease-in        : "0.420, 0.000, 1.000, 1.000" !default;
$ease-out       : "0.000, 0.000, 0.580, 1.000" !default;
$ease-in-out    : "0.420, 0.000, 0.580, 1.000" !default;

$easeInQuad     : "0.550, 0.085, 0.680, 0.530" !default;
$easeInCubic    : "0.550, 0.055, 0.675, 0.190" !default;
$easeInQuart    : "0.895, 0.030, 0.685, 0.220" !default;
$easeInQuint    : "0.755, 0.050, 0.855, 0.060" !default;
$easeInSine     : "0.470, 0.000, 0.745, 0.715" !default;
$easeInExpo     : "0.950, 0.050, 0.795, 0.035" !default;
$easeInCirc     : "0.600, 0.040, 0.980, 0.335" !default;
$easeInBack     : "0.600, -0.280, 0.735, 0.045" !default;

$easeOutQuad    :  "0.250, 0.460, 0.450, 0.940" !default;
$easeOutCubic   :  "0.215, 0.610, 0.355, 1.000" !default;
$easeOutQuart   :  "0.165, 0.840, 0.440, 1.000" !default;
$easeOutQuint   :  "0.230, 1.000, 0.320, 1.000" !default;
$easeOutSine    :  "0.390, 0.575, 0.565, 1.000" !default;
$easeOutExpo    :  "0.190, 1.000, 0.220, 1.000" !default;
$easeOutCirc    :  "0.075, 0.820, 0.165, 1.000" !default;
$easeOutBack    :  "0.175, 0.885, 0.320, 1.275" !default;

$easeInOutQuad  :  "0.455, 0.030, 0.515, 0.955" !default;
$easeInOutCubic :  "0.645, 0.045, 0.355, 1.000" !default;
$easeInOutQuart :  "0.770, 0.000, 0.175, 1.000" !default;
$easeInOutQuint :  "0.860, 0.000, 0.070, 1.000" !default;
$easeInOutSine  :  "0.445, 0.050, 0.550, 0.950" !default;
$easeInOutExpo  :  "1.000, 0.000, 0.000, 1.000" !default;
$easeInOutCirc  :  "0.785, 0.135, 0.150, 0.860" !default;
$easeInOutBack  :  "0.680, -0.550, 0.265, 1.550" !default;

// Types
@function returnEaseType($type) {
  $easingValue: "";
  @if ($type == "linear")              { $easingValue:$linear }
  @else if ($type ==  "ease")          { $easingValue:$ease }
  @else if ($type ==  "ease-in")       { $easingValue:$ease-in }
  @else if ($type ==  "ease-out")      { $easingValue:$ease-out }
  @else if ($type ==  "ease-in-out")   { $easingValue:$ease-in-out }

  @else if ($type ==  "easeInQuad")    { $easingValue:$easeInQuad }
  @else if ($type ==  "easeInCubic")   { $easingValue:$easeInCubic }
  @else if ($type ==  "easeInQuart")   { $easingValue:$easeInQuart }
  @else if ($type ==  "easeInQuint")   { $easingValue:$easeInQuint }
  @else if ($type ==  "easeInSine")    { $easingValue:$easeInSine }
  @else if ($type ==  "easeInExpo")    { $easingValue:$easeInExpo }
  @else if ($type ==  "easeInCirc")    { $easingValue:$easeInCirc }
  @else if ($type ==  "easeInBack")    { $easingValue:$easeInBack }

  @else if ($type ==  "easeOutQuad")   { $easingValue:$easeOutQuad }
  @else if ($type ==  "easeOutCubic")  { $easingValue:$easeOutCubic }
  @else if ($type ==  "easeOutQuart")  { $easingValue:$easeOutQuart }
  @else if ($type ==  "easeOutQuint")  { $easingValue:$easeOutQuint }
  @else if ($type ==  "easeOutSine")   { $easingValue:$easeOutSine }
  @else if ($type ==  "easeOutExpo")   { $easingValue:$easeOutExpo }
  @else if ($type ==  "easeOutCirc")   { $easingValue:$easeOutCirc }
  @else if ($type ==  "easeOutBack")   { $easingValue:$easeOutBack }

  @else if ($type ==  "easeInOutQuad") { $easingValue:$easeInOutQuad }
  @else if ($type ==  "easeInOutCubic"){ $easingValue:$easeInOutCubic }
  @else if ($type ==  "easeInOutQuart"){ $easingValue:$easeInOutQuart }
  @else if ($type ==  "easeInOutQuint"){ $easingValue:$easeInOutQuint }
  @else if ($type ==  "easeInOutSine") { $easingValue:$easeInOutSine }
  @else if ($type ==  "easeInOutExpo") { $easingValue:$easeInOutExpo }
  @else if ($type ==  "easeInOutCirc") { $easingValue:$easeInOutCirc }
  @else if ($type ==  "easeInOutBack") { $easingValue:$easeInOutBack }

  @return $easingValue;
}

$ceaser-legacy  : false !default;

@function ceaser($type: $ease) {
  @if ($ceaser-legacy) {
    $easingValue: returnEaseType($type);
    @return cubic-bezier(unquote($easingValue));
  } @else {
    @return cubic-bezier(unquote($type));
  }
}

@mixin ceaser-transition($properties: all, $duration: 500ms, $type: $ease, $delay: 0ms) {
  @if ($ceaser-legacy) {
    $easingValue : returnEaseType($type);
    @include transition($properties $duration cubic-bezier(unquote($easingValue)) $delay);
  } @else {
    @include transition($properties $duration cubic-bezier(unquote($type)) $delay);
  }
}

@mixin ceaser($type: "ease", $properties: all, $duration: 500ms, $delay: 0) { 
  $easingValue : "";
  @if ( $type == "linear" )              { $easingValue: returnEaseType("linear"); }
  @else if ( $type ==  "ease" )          { $easingValue: returnEaseType("ease"); }
  @else if ( $type ==  "ease-in" )       { $easingValue: returnEaseType("ease-in"); }
  @else if ( $type ==  "ease-out" )      { $easingValue: returnEaseType("ease-out"); }
  @else if ( $type ==  "ease-in-out" )   { $easingValue: returnEaseType("ease-in-out"); }

  @else if ( $type ==  "easeInQuad" )    { $easingValue: returnEaseType("easeInQuad"); }
  @else if ( $type ==  "easeInCubic" )   { $easingValue: returnEaseType("easeInCubic"); }
  @else if ( $type ==  "easeInQuart" )   { $easingValue: returnEaseType("easeInQuart"); }
  @else if ( $type ==  "easeInQuint" )   { $easingValue: returnEaseType("easeInQuint"); }
  @else if ( $type ==  "easeInSine" )    { $easingValue: returnEaseType("easeInSine"); }
  @else if ( $type ==  "easeInExpo" )    { $easingValue: returnEaseType("easeInExpo"); }
  @else if ( $type ==  "easeInCirc" )    { $easingValue: returnEaseType("easeInCirc"); }
  @else if ( $type ==  "easeInBack" )    { $easingValue: returnEaseType("easeInBack"); }

  @else if ( $type ==  "easeOutQuad" )    { $easingValue: returnEaseType("easeOutQuad"); }
  @else if ( $type ==  "easeOutCubic" )   { $easingValue: returnEaseType("easeOutCubic"); }
  @else if ( $type ==  "easeOutQuart" )   { $easingValue: returnEaseType("easeOutQuart"); }
  @else if ( $type ==  "easeOutQuint" )   { $easingValue: returnEaseType("easeOutQuint"); }
  @else if ( $type ==  "easeOutSine" )    { $easingValue: returnEaseType("easeOutSine"); }
  @else if ( $type ==  "easeOutExpo" )    { $easingValue: returnEaseType("easeOutExpo"); }
  @else if ( $type ==  "easeOutCirc" )    { $easingValue: returnEaseType("easeOutCirc"); }
  @else if ( $type ==  "easeOutBack" )    { $easingValue: returnEaseType("easeOutBack"); }

  @else if ( $type ==  "easeInOutQuad" )  { $easingValue: returnEaseType("easeInOutQuad"); }
  @else if ( $type ==  "easeInOutCubic" ) { $easingValue: returnEaseType("easeInOutCubic"); }
  @else if ( $type ==  "easeInOutQuart" ) { $easingValue: returnEaseType("easeInOutQuart"); }
  @else if ( $type ==  "easeInOutQuint" ) { $easingValue: returnEaseType("easeInOutQuint"); }
  @else if ( $type ==  "easeInOutSine" )  { $easingValue: returnEaseType("easeInOutSine"); }
  @else if ( $type ==  "easeInOutExpo" )  { $easingValue: returnEaseType("easeInOutExpo"); }
  @else if ( $type ==  "easeInOutCirc" )  { $easingValue: returnEaseType("easeInOutCirc"); }
  @else if ( $type ==  "easeInOutBack" )  { $easingValue: returnEaseType("easeInOutBack"); }

  @include transition($properties, $duration, cubic-bezier(unquote($easingValue)), $delay)
}