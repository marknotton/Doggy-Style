@mixin border-radius($radius, $direction:null) {
  @if      $direction == top { @include border-top-radius($radius); }
  @else if $direction == right { @include border-right-radius($radius); }
  @else if $direction == bottom { @include border-bottom-radius($radius); }
  @else if $direction == left { @include border-left-radius($radius); }
  @else if $direction == top-right { @include border-top-right-radius($radius); }
  @else if $direction == top-left { @include border-top-left-radius($radius); }
  @else if $direction == bottom-right { @include border-bottom-right-radius($radius); }
  @else if $direction == bottom-left { @include  border-bottom-left-radius($radius); }
  // @else if type-of($direction) == list {
  //   // TODO: Loop through each list element: tr tl br bl
  // }
  @else { 
    @if type-of($radius) == number {
      -webkit-border-radius: addUnit($radius);
      border-radius: addUnit($radius);
    } @else if type-of($radius) == list {
      $new-radius : null;
      
      @each $rad in $radius {
        $new-radius: append($new-radius, addUnit($rad));
      }

      -webkit-border-radius: $new-radius;
      border-radius: $new-radius;
    }
  }
}

// Top
@mixin border-radius-top($args...) { @include border-top-radius($args...); }
@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: addUnit($radius);
  border-top-right-radius: addUnit($radius);

  -webkit-border-top-left-radius: addUnit($radius);
  border-top-left-radius: addUnit($radius);
  
}

// Right
@mixin border-radius-right($args...) { @include border-right-radius($args...); }
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: addUnit($radius);
  border-bottom-right-radius: addUnit($radius);

  -webkit-border-top-right-radius: addUnit($radius);
  border-top-right-radius: addUnit($radius);
}

// Bottom
@mixin border-radius-bottom($args...) { @include border-bottom-radius($args...); }
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: addUnit($radius);
  border-bottom-right-radius: addUnit($radius);

  -webkit-border-bottom-left-radius: addUnit($radius);
  border-bottom-left-radius: addUnit($radius);
}

// Left
@mixin border-radius-left($args...) { @include border-left-radius($args...); }
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: addUnit($radius);
  border-bottom-left-radius: addUnit($radius);

  -webkit-border-top-left-radius: addUnit($radius);
  border-top-left-radius: addUnit($radius);
}

// Top Right
@mixin border-radius-top-right($args...) { @include border-top-right-radius($args...); }
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;  
}

// Top Left
@mixin border-radius-top-left($args...) { @include border-top-left-radius($args...); }
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: addUnit($radius);
  border-top-left-radius: addUnit($radius);
}

// Bottom Right
@mixin border-radius-bottom-right($args...) { @include border-bottom-right-radius($args...); }
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: addUnit($radius);
  border-bottom-right-radius: addUnit($radius);
}

// Bottom Left
@mixin border-radius-bottom-left($args...) { @include border-bottom-left-radius($args...); }
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: addUnit($radius);
  border-bottom-left-radius: addUnit($radius);
}