$browsers : ie edge firefox chrome opera;

// Usage : @include browsers(ie 9 10) { ... }
// Usage : @include browsers(ie 9, firefox) { ... }
// Usage : @include browsers(ie) { ... }
// Usage : @include browsers(edge 12, ie 11) { ... }

@mixin browsers($args...) {

  // This checks to see if the current selector is html. 
  // This can not be converted into a shorthanded if statement. 
  $selector : null;
  @if not is-selector(html) { $selector : &; }

  @each $settings in _arglist-to-list($args...) {
    
    $browsers-list : ();
    $versions-list : ();

    @each $setting in $settings {
      @if type-of($setting) == string and contains($browsers, $setting) {
        $browsers-list : append($browsers-list, $setting);
      } 
      @elseif type-of($setting) == number or type-of($setting) == list{
        @each $version in $setting {
          $versions-list : append($versions-list, $version);
        }
      }
    }

    @if length($browsers-list) > 1 and length($versions-list) > 0 { 
      @error 'You can not check the same version for 2 browsers in a single argument. Try seperating the arguments using a comma (,)';
    } @else {
      @if length($browsers-list) > 0 {
        @if length($versions-list) > 0 {
          @each $version in $versions-list {
            @at-root html[data-browser^=#{$browsers-list}][data-browser$='#{$version}'] #{$selector} { @content }
          }
        } @else {
          @each $browser in $browsers-list {
            @at-root html[data-browser^=#{$browser}] #{$selector} { @content }
          }
        }
      }
    }
  }
}

// Usage : @include ie(9 10) { ... }
// Usage : @include ie { ... }
@mixin ie($version:null) { 
  @include browsers(ie $version) { @content };
}

@mixin edge($version:null) { 
  // TODO: When the browser plugin can detect edge version numbers, uncomment remove the next line
  @include warning('As of March 2016: The plugin used to detect browser versions can not currently output the Edge browser version.
    This mixin will exclude all version numbers for now.')
  $version : null;
  @include browsers(edge $version) { @content };
}

@mixin firefox($version:null) { 
  @include browsers(firefox $version) { @content };
}

@mixin chrome($version:null) { 
  @include browsers(chrome $version) { @content };
}

@mixin opera($version:null) { 
  @include browsers(opera $version) { @content };
}