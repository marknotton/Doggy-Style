$browsers : ('ie', 'edge', 'firefox', 'chrome', 'opera', 'mobile');

// TODO: Scope is messed up when these mixins are used directly in a html selector

@mixin ie($version:null) { 
  $version : if($version == null, null, "[data-browser$='#{$version}']");
  html[data-browser^=ie]#{$version} & { @content } 
}

@mixin edge($version:null) { 
  // TODO: When the browser plugin can detect edge version number, uncomment this line
  // $version : if($version == null, null, "[data-browser$='#{$version}']");
  $version : null;
  html[data-browser^=edge]#{$version} & { @content } 
}

@mixin firefox($version:null) { 
  $version : if($version == null, null, "[data-browser$='#{$version}']");
  html[data-browser^=firefox]#{$version} & { @content } 
}

@mixin chrome($version:null) { 
  $version : if($version == null, null, "[data-browser$='#{$version}']");
  html[data-browser^=chrome]#{$version} & { @content } 
}

@mixin opera($version:null) { 
  $version : if($version == null, null, "[data-browser$='#{$version}']");
  html[data-browser^=opera]#{$version} & { @content } 
}

@mixin browsers($args) {
  @each $browser in $args {
    @if ( index($browsers, $browser) ) {
      html[data-browser^=#{$browser}] & { 
        @content;
      }
    }
  }
}

// TODO: Scope is messed up when these mixins are used directly in a body selector
@mixin mobile() { 
  body.mobile & { @content } 
}

@mixin tablet() { 
  body.tablet & { @content } 
}

@mixin desktop() { 
  body.desktop & { @content } 
}
