// //This will add a lineheight in percentage that's just a little bit greater than the font
// @mixin fontsize($size:$text, $lineheight:10%, $letterspacing:normal) {
//  @if (str-index(#{$lineheight}, "%")) {
//     // Make the lingheight a percentage of the font size
//     $lineheight: strip($lineheight);
//     $height: ($size/100*$lineheight)+$size;
//     font-size:addUnit($size); line-height:addUnit($height);
//   } @else {
//     // Manually add a lineheight
//     font-size:addUnit($size); line-height:addUnit($lineheight);
//   }
//   @if ($letterspacing != normal and isNumber($letterspacing)) { 
//     letter-spacing:addUnit($letterspacing);
//   }
// }

//This will add a lineheight in percentage that's just a little bit greater than the font
@mixin fontsize($size:$fs, $smart:true) {
  @if type-of($size) == number {
    font-size:addUnit($size);
    line-height:smart-lineheight($size, $smart);
  } @else {
    @if (length($size) >= 2) {
      font-size:addUnit(nth($size, 1));       
      line-height:smart-lineheight(nth($size, 2), $smart);
    }
    @if (length($size) == 3) {
      letter-spacing:addUnit(nth($size, 3));
    }
  }
}

@mixin smart-fontsize($minArgs:null, $maxArgs:null) {

  // Default Settings
  $min-units : ();
  $min-size : $font-size;
  $min-lineheight : smart-lineheight($min-size);
  $min-lineheight-bool : true;
  $min-break : $medium;

  $max-units : ();
  $max-size : $font-size*2 - ($font-size/2);
  $max-lineheight : smart-lineheight($max-size);
  $max-lineheight-bool : true;
  $max-break : $max;
  
  // Check Min Settings
  @each $rule in $minArgs {
    @if type-of($rule) == bool {
      $min-lineheight-bool : $rule;
    }
    @if type-of($rule) == number {
      $min-units : append($min-units, $rule);
    }
  }

  @if length($min-units) >= 1 {
    $min-size : nth($min-units, 1);
  }

  @if length($min-units) >= 2 and strip(nth($min-units, 2)) <= $min {
    $min-lineheight : smart-lineheight(nth($min-units, 2), $min-lineheight-bool);
  } @elseif length($min-units) > 1 {
    $min-break : nth($min-units, 2);
  }

  @if length($min-units) >= 3 {
    $min-break : nth($min-units, 3);
  }
  
  // Check Max Settings  
  @if $maxArgs {
    @each $rule in $maxArgs {
      @if type-of($rule) == bool {
        $max-lineheight-bool : $rule;
      }
      @if type-of($rule) == number {
        $max-units : append($max-units, $rule);
      }
    }

    @if length($max-units) >= 1 {
      $max-size : nth($max-units, 1);
    }

    @if length($max-units) >= 2 and strip(nth($max-units, 2)) <= $max {
      $max-lineheight : smart-lineheight(nth($max-units, 2), $max-lineheight-bool);
    } @elseif length($max-units) > 1 {
      $max-break : nth($max-units, 2);
    }

    @if length($max-units) >= 3 {
      $max-break : nth($max-units, 3);
    }
  }

  font-size : addUnit($max-size/10, vw);
  line-height: smart-lineheight($max-size);

  @include break($max-break min-width) {
    font-size:addUnit($max-size);
    line-height:$max-lineheight;
  }

  @include break($min-break max-width) {
    font-size:addUnit($min-size);
    line-height:$min-lineheight;
  }
}

