/// Create a set of border-radius svg sprites with advance settings
///
/// @author Mark Notton
///
/// @access public

@mixin fake-radius($settings...) {

  /*$count : 0;
  
  $corner-settings: (
    top-left : (
      color : null,
      width : null,
      height : null
    ),
    top-right : (
      color : null,
      width : null,
      height : null
    ),
    bottom-left : (
      color : null,
      width : null,
      height : null
    ),
    bottom-right : (
      color : null,
      width : null,
      height : null
    ),
  );

  $corners : to-list($corner-settings, keys);

  @debug $corners;

  @each $settings in _arglist-to-list($settings...) {
    $count : $count + 1; 

    @each $setting in $settings {

      // If the settings contains one of the corners types, only focus on that one corner for the remaining settings.
      @if is-string($setting) and contains($corners, $setting) {
        $corner : $setting;
        
        @each $setting in $settings {
          @if is-colour($setting) and map-deep-get($corner-settings, $corner, color) == null {
            $corner-settings : map-deep-set($corner-settings, $corner, color, colour($setting, true));
          }
          @elseif is-number($setting) {
            @if map-deep-get($corner-settings, $corner, width) == null {
              $corner-settings : map-deep-set($corner-settings, $corner, width, $setting);
            } @else {
              $corner-settings : map-deep-set($corner-settings, $corner, height, $setting);
            }
          }
        }

        // Default colour if not supplied
        @if map-deep-get($corner-settings, $corner, color) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, color, colour(red, true));
        }
        
        // If not units were found at all, revert the width back to a default radius setting
        @if map-deep-get($corner-settings, $corner, width) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, width, $border-radius);
        }

        // If a second unit was not supplied, the height would be set to null. As a fallback, set height to width
        @if map-deep-get($corner-settings, $corner, height) == null {
          $corner-settings : map-deep-set($corner-settings, $corner, height, map-deep-get($corner-settings, $corner, width));
        }

      }
      @else {
        
      
      }
    }
  
  }
  @debug $corner-settings;*/

  $colour : _hash-fix(#ffffff);
  $size : $border-radius;
  $sudo : before;

  @each $settings in _arglist-to-list($settings...) {
    @each $setting in $settings {
      @if is-colour($setting) {
        $colour : _hash-fix($setting);
      }
      @if is-string($setting) and _sudo($setting) {
        $sudo : $setting;
      }
      @elseif is-number($setting) {
        @if is-percentage($setting) {
          $size : addUnit(_min-max-number(strip($setting))/2, %);
        } @else {
          $size : strip($setting);
        }
      }
    }
  }

  $svg : "<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='100%' height='100%'>";
  $svg : $svg + "<def>";
  $svg : $svg + "<symbol id='corner' viewBox='0 0 10 10'>";
  $svg : $svg + "<path d='M10,0H0v9.9C0,4.1,4.7,0,10,0z'/>";
  $svg : $svg + "</symbol>";
  $svg : $svg + "</def>";
  $svg : $svg + "<path d='M10,0H0v9.9C0,4.1,4.7,0,10,0z'/>";
  $svg : $svg + "<use x='0' y='0%' width='"+$size+"' height='"+$size+"' fill='"+$colour+"' xlink:href='%23corner' />";
  $svg : $svg + "<use x='-100%' y='0%' width='"+$size+"' height='"+$size+"' fill='"+$colour+"' transform='scale(-1,1)' xlink:href='%23corner' />";
  $svg : $svg + "<use x='0%' y='-100%' width='"+$size+"' height='"+$size+"' fill='"+$colour+"' transform='scale(1,-1)' xlink:href='%23corner' />";
  $svg : $svg + "<use x='-100%' y='-100%' width='"+$size+"' height='"+$size+"' fill='"+$colour+"' transform='scale(-1,-1)' xlink:href='%23corner' />";
  $svg : $svg + "</svg>";


  &#{_sudo($sudo)} { 
    @extend %sudo, %nopointerevent; 
    background-image:svg($svg); z-index:1;
    @content;
  }
}



   // xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:a="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"

