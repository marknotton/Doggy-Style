/// An equivalent of `zip` function but for maps.
/// I wrote my own version of this before realising Hugo had done something similar. 
/// I have kept the name, but used my own.
///
/// @author Mark Notton
///
/// @link http://www.sitepoint.com/extra-map-functions-sass
/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#zip-instance_method
///
/// @access public
///
/// @param {list} $list1 - Keys for map
///
/// @param {list} $list2 - Values for map
///
/// @param {bool} $swappable - Swap variables around so list1 has the most values. Default is true.
///
/// @return {map} Freshly created map

@function map-zip($list1, $list2, $swappable:true) {
  
  $map : ();
  
  $list1-size : length($list1);
  $list2-size : length($list2);

  $count : if($list1-size < $list2-size, $list1-size, $list2-size);

  
  @if ($list1-size < $list2-size and $swappable) {
    $temp : $list1;
    $list1 : $list2;
    $list2 : $temp;
    @if $warnings { @warn(($list2-size - $list1-size)+' value'+ if($list2-size - $list1-size != 1, 's', '') +' has not been added to the map because the list sizes did not match.'); }
  } 

  @if $warnings {
    @if ($list1-size < $list2-size) { 
      @warn('The second list had '+($list2-size - $list1-size)+' more value'+ if($list2-size - $list1-size != 1, 's', '') +' than the first list');
    } @elseif ($list1-size > $list2-size) {
      @warn('The first list had '+($list1-size - $list2-size)+' more value'+ if($list1-size - $list2-size != 1, 's', '') +' than the second list');
    }
  }

  @for $i from 1 through $count {
    $map : map-set($map, nth($list1, $i), nth($list2, $i));
  }

  @return $map;
}